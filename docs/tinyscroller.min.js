const t={OUTER_CONTAINER:"tinyscroller__outercontainer",PROGRESS_CONTAINER:"tinyscroller__progresscontainer",PROGRESS_DOT:"tinyscroller__progressdot",ARROW_CONTAINER:"tinyscroller__arrowcontainer",ARROW:"tinyscroller__arrow",IMAGE_CONTAINER:"tinyscroller__imgcontainer",IMAGE_WRAPPER:"tinyscroller__imgwrapper",IMAGE:"tinyscroller__image"},i={orientation:"horizontal",fit:"cover",progress:!0,arrows:!0};function o(t,i){let o;return(...e)=>{clearTimeout(o),o=setTimeout((()=>t(...e)),i)}}export class Tinyscroller{constructor(e,s=i){if(Tinyscroller.validateOptions(s),e instanceof Element)this.outerContainer=e;else{if("string"!=typeof e)throw new Error("The target provided to the Tinyscroller constructor does not appear to be either a valid DOM element nor a CSS selector string.");this.outerContainer=document.querySelector(e)}this.options={...i,...s},this.imageContainer=document.createElement("div"),this.images=[],this.cursor=0,this.imageContainer.addEventListener("wheel",(t=>{("vertical"===this.options.orientation&&t.shiftKey||"horizontal"===this.options.orientation&&!t.shiftKey)&&(t.deltaY<0?this.scrollToPrevious("smooth"):t.deltaY>0&&this.scrollToNext("smooth"))})),this.outerContainer.appendChild(this.imageContainer),this.outerContainer.classList.add(t.OUTER_CONTAINER),this.imageContainer.classList.add(t.IMAGE_CONTAINER),this.setOrientation(this.options.orientation),this.setImageFit(this.options.fit),!0===this.options.progress&&(this.progressContainer=document.createElement("div"),this.progressContainer.classList.add(t.PROGRESS_CONTAINER),this.outerContainer.prepend(this.progressContainer)),this.options.arrows;this.scrollToFirst=o(this.scrollToFirst.bind(this),75),this.scrollToPrevious=o(this.scrollToPrevious.bind(this),75),this.scrollToNext=o(this.scrollToNext.bind(this),75)}static validateOptions(t){if(!["horizontal","vertical",void 0].includes(t?.orientation))throw new Error(`Tinyscroller options 'orientation' field was expected to be either 'horizontal', 'vertical', or undefined, but instead received: ${t.orientation}.`);if(!["contain","cover","fill",void 0].includes(t?.fit))throw new Error(`Tinyscroller options 'fit' field was expected to be either 'contain', 'cover', 'fill', or undefined, but instead received: ${t.fit}.`)}getOrientation(){return this.options.orientation}setOrientation(i){i!==this.options.orientation&&this.imageContainer.classList.remove(`${t.IMAGE_CONTAINER}--orientation-${this.options.orientation}`),this.imageContainer.classList.add(`${t.IMAGE_CONTAINER}--orientation-${i}`),this.options.orientation=i}getImageFit(){return this.options.fit}setImageFit(i){this.images.forEach((o=>{i!==this.options.fit&&o.classList.remove(`${t.IMAGE}--fit-${this.options.fit}`),o.classList.add(`${t.IMAGE}--fit-${i}`)})),this.options.fit=i}enableArrows(){this.arrowContainers={},"horizontal"===this.options.orientation?(this.arrowContainers.left=document.createElement("div"),this.arrowContainers.right=document.createElement("div"),this.arrowContainers.right.addEventListener("click",(()=>this.scrollToNext("smooth"))),this.arrowContainers.left.addEventListener("click",(()=>this.scrollToPrevious("smooth")))):"vertical"===this.options.orientation&&(this.arrowContainers.up=document.createElement("div"),this.arrowContainers.down=document.createElement("div"),this.arrowContainers.right.addEventListener("click",(()=>this.scrollToNext("smooth"))),this.arrowContainers.left.addEventListener("click",(()=>this.scrollToPrevious("smooth"))));const i=Object.keys(this.arrowContainers).map((i=>(this.arrowContainers[i].classList.add(`${t.ARROW_CONTAINER}--direction-${i}`),this.arrowContainers[i])));i.forEach((i=>{i.classList.add(t.ARROW_CONTAINER);const o=document.createElement("div");o.classList.add(t.ARROW),i.appendChild(o)})),this.outerContainer.prepend(...i)}disableArrows(){["left","right","top","bottom"].forEach((t=>{this?.arrowContainers?.[t]?.remove()})),this.arrowContainers=void 0}addImages(...i){for(let o of i){if("string"==typeof o){const t=o;o=document.createElement("img"),o.src=t}else if(!(o instanceof HTMLImageElement))throw new Error("An invalid object was provided to TinyScroller#addImages");this.images.push(o);const i=document.createElement("div");if(o.classList.add(t.IMAGE),void 0!==this.options.fit&&o.classList.add(`${t.IMAGE}--fit-${this.options.fit}`),i.classList.add(t.IMAGE_WRAPPER),void 0!==this.progressContainer){const o=document.createElement("div");o.classList.add(t.PROGRESS_DOT),o.addEventListener("click",(()=>{i.scrollIntoView({behavior:"smooth"})})),this.progressContainer.append(o)}i.appendChild(o),this.imageContainer.append(i)}}scrollToIndex(t,i){}scrollToFirst(t){this.scrollToIndex(0,t)}scrollToLast(t){this.scrollToIndex(this.images.length-1,t)}scrollToPrevious(t){"vertical"===this.options.orientation?this.imageContainer.scrollBy({top:-100,left:0,behavior:t}):"horizontal"===this.options.orientation&&this.imageContainer.scrollBy({top:0,left:-100,behavior:t})}scrollToNext(t){"vertical"===this.options.orientation?this.imageContainer.scrollBy({top:100,left:0,behavior:t}):"horizontal"===this.options.orientation&&this.imageContainer.scrollBy({top:0,left:100,behavior:t})}}